name: Deploy to EC2 with Promotion

on:
  workflow_dispatch:
  push:
    branches: [ 'main' ]
    paths-ignore:
      - 'infrastructure/**'
      - 'docs/**'
      - '*.md'
      - '.gitignore'

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    strategy:
      matrix:
        node-version: [22, 23, 24]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: |
        echo "ðŸ”§ Installing dependencies for Node.js ${{ matrix.node-version }}"
        npm ci
    - name: Run tests
      run: |
        echo "ðŸ§ª Running tests on Node.js ${{ matrix.node-version }}"
        npm test

  upload-artifact:
    name: Upload Artifact
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload production artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          retention-days: 1
          path: |
            package.json
            package-lock.json
            prisma/
            public/
            src/
            tsconfig.json

  deploy:
    name: Deploy to EC2
    needs: upload-artifact
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download app artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact
          path: app

      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "app/*"
          target: "/tmp/nodejs-simpleapi-deploy"

      - name: Configure and start application
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            APP_DIR="/home/${{ vars.EC2_USERNAME }}/nodejs-simpleapi"
            TEMP_DIR="/tmp/nodejs-simpleapi-deploy"

            echo "Starting deployment process..."
            echo "APP_DIR: $APP_DIR"
            echo "TEMP_DIR: $TEMP_DIR"

            echo "Creating app directory..."
            mkdir -p $APP_DIR

            echo "Cleaning old files from $APP_DIR..."
            rm -rf $APP_DIR/*

            echo "Moving files from $TEMP_DIR to $APP_DIR..."
            mv $TEMP_DIR/app/* $APP_DIR/
            rm -rf $TEMP_DIR
            echo "Files moved successfully"

            cd $APP_DIR
            echo "Changed directory to $APP_DIR"

            echo "Installing dependencies..."
            npm ci
            echo "Dependencies installed"

            echo "Creating .env file..."
            cat > .env <<EOF
            PORT=3000
            NODE_ENV=production
            LOG_LEVEL=info
            DATABASE_URL=${{ secrets.APP_DATABASE_URL }}
            ALLOWED_URL_ORIGINS=${{ vars.APP_ALLOWED_URL_ORIGINS }}
            EOF
            echo ".env file created"

            echo "Building the application..."
            npm run build

            echo "Running migrations..."
            npx prisma migrate deploy
            echo "Migrations completed"

            echo "Remove Dev dependencies..."
            npm prune --production
            echo "Dev dependencies removed"

            echo "Reloading application with zero downtime..."
            pm2 reload nodejs-simpleapi || pm2 start npm --name nodejs-simpleapi -- start
            pm2 save
            echo "Application reloaded successfully"
            
            echo "Deployment completed successfully!"
